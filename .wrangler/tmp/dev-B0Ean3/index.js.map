{
  "version": 3,
  "sources": ["../bundle-h9nEE4/checked-fetch.js", "../../../src/handlers/cloudflareTranslateHandler.ts", "../../../src/services/languageSettingService.ts", "../../../src/handlers/messageHandler.ts", "../../../src/handlers/postbackHandler.ts", "../../../src/utils/lineSignature.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-h9nEE4/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-h9nEE4/middleware-loader.entry.ts"],
  "sourceRoot": "D:\\projects\\LINEbot\\.wrangler\\tmp\\dev-B0Ean3",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "import { Env } from '../types';\r\n\r\n// API \u56DE\u61C9\u7684\u4ECB\u9762\u5B9A\u7FA9\r\ninterface CloudflareAPIResponse {\r\n    result: {\r\n        detectedLanguage?: string;\r\n        translated_text?: string;\r\n    };\r\n    success: boolean;\r\n    errors: any[];\r\n}\r\n\r\n// \u8A9E\u8A00\u4EE3\u78BC\u6620\u5C04\u8868\r\nconst LANGUAGE_MAP = {\r\n    'en': 'English',\r\n    'vi': 'Vietnamese',\r\n    'zh-TW': 'Traditional Chinese',\r\n    'zh-CN': 'Simplified Chinese',\r\n    'ja': 'Japanese',\r\n    'ko': 'Korean',\r\n    'th': 'Thai',\r\n    'ru': 'Russian',\r\n    'ar': 'Arabic',\r\n    'fr': 'French',\r\n    'de': 'German',\r\n    'es': 'Spanish',\r\n    'it': 'Italian',\r\n    'ms': 'Malay',\r\n    'id': 'Indonesian',\r\n    'hi': 'Hindi',\r\n    'pt': 'Portuguese'\r\n};\r\n\r\n// \u6AA2\u6E2C\u6587\u672C\u8A9E\u8A00\r\nasync function detectLanguage(text: string, env: Env): Promise<string> {\r\n    try {\r\n        const response = await env.AI.run('@cf/huggingface/microsoft/infoxlm-large-language-detection', {\r\n            text\r\n        });\r\n\r\n        if (!response.result?.detectedLanguage) {\r\n            throw new Error('\u672A\u6536\u5230\u8A9E\u8A00\u6AA2\u6E2C\u7D50\u679C');\r\n        }\r\n\r\n        return response.result.detectedLanguage;\r\n    } catch (error) {\r\n        console.error('\u8A9E\u8A00\u6AA2\u6E2C\u932F\u8AA4:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// \u7FFB\u8B6F\u6587\u672C\r\nasync function translate(text: string, sourceLang: string, targetLang: string, env: Env): Promise<string> {\r\n    try {\r\n        console.log(`\u6E96\u5099\u7FFB\u8B6F\u6587\u672C: \"${text}\" \u5F9E ${sourceLang} \u5230 ${targetLang}`);\r\n\r\n        // \u5982\u679C\u6E90\u8A9E\u8A00\u548C\u76EE\u6A19\u8A9E\u8A00\u76F8\u540C\uFF0C\u76F4\u63A5\u8FD4\u56DE\u539F\u6587\r\n        if (sourceLang === targetLang) {\r\n            return text;\r\n        }\r\n\r\n        const response = await env.AI.run('@cf/meta/m2m100-1.2b', {\r\n            text,\r\n            source_lang: sourceLang === 'auto' ? undefined : sourceLang,\r\n            target_lang: targetLang\r\n        });\r\n\r\n        if (!response.result?.translated_text) {\r\n            throw new Error('\u672A\u6536\u5230\u7FFB\u8B6F\u7D50\u679C');\r\n        }\r\n\r\n        return response.result.translated_text;\r\n    } catch (error) {\r\n        console.error('\u7FFB\u8B6F\u932F\u8AA4:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// \u667A\u80FD\u7FFB\u8B6F\u8655\u7406\r\nexport async function translateWithSecondary(\r\n    text: string,\r\n    primaryLang: string,\r\n    secondaryLang: string | null,\r\n    env: Env\r\n): Promise<Array<{lang: string, text: string}>> {\r\n    try {\r\n        // \u6AA2\u6E2C\u8F38\u5165\u6587\u672C\u7684\u8A9E\u8A00\r\n        const detectedLang = await detectLanguage(text, env);\r\n        console.log('\u4F7F\u7528\u8A9E\u8A00\u4EE3\u78BC:', `\u4F86\u6E90=${detectedLang}`);\r\n\r\n        const translations: Array<{lang: string, text: string}> = [];\r\n        \r\n        // \u5982\u679C\u6AA2\u6E2C\u5230\u7684\u8A9E\u8A00\u8207\u76EE\u6A19\u8A9E\u8A00\u76F8\u540C\uFF0C\u76F4\u63A5\u8FD4\u56DE\u539F\u6587\r\n        if (detectedLang === primaryLang) {\r\n            translations.push({ lang: primaryLang, text });\r\n            if (secondaryLang) {\r\n                const secondaryTranslation = await translate(text, detectedLang, secondaryLang, env);\r\n                translations.push({ lang: secondaryLang, text: secondaryTranslation });\r\n            }\r\n            return translations;\r\n        }\r\n\r\n        // \u7FFB\u8B6F\u6210\u4E3B\u8981\u8A9E\u8A00\r\n        const primaryTranslation = await translate(text, detectedLang, primaryLang, env);\r\n        translations.push({ lang: primaryLang, text: primaryTranslation });\r\n\r\n        // \u5982\u679C\u6709\u8A2D\u5B9A\u6B21\u8981\u8A9E\u8A00\uFF0C\u4E5F\u9032\u884C\u7FFB\u8B6F\r\n        if (secondaryLang && secondaryLang !== detectedLang) {\r\n            const secondaryTranslation = await translate(text, detectedLang, secondaryLang, env);\r\n            translations.push({ lang: secondaryLang, text: secondaryTranslation });\r\n        }\r\n\r\n        return translations;\r\n    } catch (error) {\r\n        console.error('\u7FFB\u8B6F\u904E\u7A0B\u4E2D\u767C\u751F\u932F\u8AA4:', error);\r\n        throw error;\r\n    }\r\n} \r\n", "import { LanguageSetting } from '../types';\r\n\r\nexport async function getLanguageSetting(\r\n    contextId: string,\r\n    contextType: 'user' | 'group' | 'room',\r\n    db: D1Database\r\n): Promise<LanguageSetting | null> {\r\n    try {\r\n        const result = await db\r\n            .prepare(\r\n                'SELECT * FROM language_settings WHERE context_id = ? AND context_type = ?'\r\n            )\r\n            .bind(contextId, contextType)\r\n            .first<LanguageSetting>();\r\n        \r\n        return result || null;\r\n    } catch (error) {\r\n        console.error('\u7372\u53D6\u8A9E\u8A00\u8A2D\u5B9A\u6642\u767C\u751F\u932F\u8AA4:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function updateLanguageSetting(\r\n    setting: LanguageSetting,\r\n    db: D1Database\r\n): Promise<boolean> {\r\n    try {\r\n        await db\r\n            .prepare(\r\n                `INSERT INTO language_settings \r\n                (context_id, context_type, primary_lang, secondary_lang, is_translating)\r\n                VALUES (?, ?, ?, ?, ?)\r\n                ON CONFLICT(context_id, context_type) DO UPDATE SET\r\n                primary_lang = excluded.primary_lang,\r\n                secondary_lang = excluded.secondary_lang,\r\n                is_translating = excluded.is_translating`\r\n            )\r\n            .bind(\r\n                setting.context_id,\r\n                setting.context_type,\r\n                setting.primary_lang,\r\n                setting.secondary_lang,\r\n                setting.is_translating ? 1 : 0\r\n            )\r\n            .run();\r\n        \r\n        return true;\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u8A9E\u8A00\u8A2D\u5B9A\u6642\u767C\u751F\u932F\u8AA4:', error);\r\n        return false;\r\n    }\r\n} ", "import { LineMessageEvent, Env } from '../types';\r\nimport { translateWithSecondary } from './cloudflareTranslateHandler';  // \u6539\u7528\u65B0\u7684\u7FFB\u8B6F\u8655\u7406\u5668\r\nimport { getLanguageSetting } from '../services/languageSettingService';\r\n\r\nexport async function handleMessage(event: LineMessageEvent, env: Env): Promise<any[]> {\r\n    try {\r\n        const text = event.message.text;\r\n        console.log('\u6536\u5230\u8A0A\u606F:', text);\r\n\r\n        // \u8655\u7406\u6307\u4EE4\r\n        if (text.startsWith('/')) {\r\n            const command = text.toLowerCase();\r\n            switch (command) {\r\n                case '/\u8AAA\u660E':\r\n                case '/help':\r\n                    return [{\r\n                        type: 'text',\r\n                        text: `\uD83D\uDCD6 LINE\u7FFB\u8B6F\u6A5F\u5668\u4EBA\u4F7F\u7528\u8AAA\u660E\\n\\n` +\r\n                            `1\uFE0F\u20E3 \u57FA\u672C\u6307\u4EE4\uFF1A\\n` +\r\n                            `\u2022 /\u7FFB\u8B6F - \u958B\u59CB\u8A2D\u5B9A\u7FFB\u8B6F\u8A9E\u8A00\\n` +\r\n                            `\u2022 /\u8A2D\u5B9A - \u8A2D\u5B9A\u7FFB\u8B6F\u8A9E\u8A00\\n` +\r\n                            `\u2022 /\u72C0\u614B - \u67E5\u770B\u76EE\u524D\u7FFB\u8B6F\u8A2D\u5B9A\\n` +\r\n                            `\u2022 /\u8AAA\u660E - \u986F\u793A\u6B64\u8AAA\u660E\\n\\n` +\r\n                            `2\uFE0F\u20E3 \u4F7F\u7528\u65B9\u5F0F\uFF1A\\n` +\r\n                            `\u2022 \u8A2D\u5B9A\u5B8C\u8A9E\u8A00\u5F8C\uFF0C\u6A5F\u5668\u4EBA\u6703\u81EA\u52D5\u7FFB\u8B6F\u7FA4\u7D44\u5167\u7684\u8A0A\u606F\\n` +\r\n                            `\u2022 \u53EF\u4EE5\u8A2D\u5B9A\u4E3B\u8981\u548C\u6B21\u8981\u7FFB\u8B6F\u8A9E\u8A00\\n` +\r\n                            `\u2022 \u652F\u63F4\u591A\u570B\u8A9E\u8A00\u4E92\u8B6F\\n\\n` +\r\n                            `3\uFE0F\u20E3 \u6CE8\u610F\u4E8B\u9805\uFF1A\\n` +\r\n                            `\u2022 \u7FFB\u8B6F\u529F\u80FD\u9810\u8A2D\u70BA\u958B\u555F\u72C0\u614B\\n` +\r\n                            `\u2022 \u53EF\u96A8\u6642\u66F4\u6539\u8A9E\u8A00\u8A2D\u5B9A\\n` +\r\n                            `\u2022 \u5982\u6709\u554F\u984C\u8ACB\u4F7F\u7528 /\u8AAA\u660E \u67E5\u770B\u8AAA\u660E`\r\n                    }];\r\n                case '/\u7FFB\u8B6F':\r\n                case '/translate':\r\n                case '/\u8A2D\u5B9A':\r\n                case '/settings':\r\n                    return [{\r\n                        type: 'flex',\r\n                        altText: '\u9078\u64C7\u7FFB\u8B6F\u8A9E\u8A00',\r\n                        contents: {\r\n                            type: 'bubble',\r\n                            body: {\r\n                                type: 'box',\r\n                                layout: 'vertical',\r\n                                contents: [\r\n                                    {\r\n                                        type: 'text',\r\n                                        text: '\uD83D\uDCDD \u9078\u64C7\u7FFB\u8B6F\u8A9E\u8A00',\r\n                                        weight: 'bold',\r\n                                        size: 'xl',\r\n                                        align: 'center',\r\n                                        color: '#1DB446'\r\n                                    },\r\n                                    {\r\n                                        type: 'text',\r\n                                        text: '\u8ACB\u9078\u64C7\u8981\u8A2D\u5B9A\u7684\u9805\u76EE\uFF1A',\r\n                                        size: 'md',\r\n                                        align: 'center',\r\n                                        margin: 'md'\r\n                                    },\r\n                                    {\r\n                                        type: 'button',\r\n                                        action: {\r\n                                            type: 'postback',\r\n                                            label: '\u8A2D\u5B9A\u4E3B\u8981\u7FFB\u8B6F\u8A9E\u8A00',\r\n                                            data: 'action=show_primary_langs',\r\n                                            displayText: '\u8A2D\u5B9A\u4E3B\u8981\u7FFB\u8B6F\u8A9E\u8A00'\r\n                                        },\r\n                                        style: 'primary',\r\n                                        margin: 'md'\r\n                                    },\r\n                                    {\r\n                                        type: 'button',\r\n                                        action: {\r\n                                            type: 'postback',\r\n                                            label: '\u8A2D\u5B9A\u6B21\u8981\u7FFB\u8B6F\u8A9E\u8A00',\r\n                                            data: 'action=show_secondary_langs',\r\n                                            displayText: '\u8A2D\u5B9A\u6B21\u8981\u7FFB\u8B6F\u8A9E\u8A00'\r\n                                        },\r\n                                        style: 'secondary',\r\n                                        margin: 'md'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    }];\r\n                case '/\u72C0\u614B':\r\n                case '/status':\r\n                    const contextId = event.source.groupId || event.source.userId || event.source.roomId;\r\n                    if (!contextId) {\r\n                        throw new Error('\u7121\u6CD5\u7372\u53D6\u4E0A\u4E0B\u6587 ID');\r\n                    }\r\n                    const setting = await getLanguageSetting(contextId, event.source.type, env.DB);\r\n                    if (setting) {\r\n                        return [{\r\n                            type: 'text',\r\n                            text: `\uD83D\uDCCA \u7576\u524D\u7FFB\u8B6F\u8A2D\u5B9A\uFF1A\\n\u4E3B\u8981\u8A9E\u8A00\uFF1A${getLanguageDisplayName(setting.primary_lang)}\\n\u6B21\u8981\u8A9E\u8A00\uFF1A${setting.secondary_lang ? getLanguageDisplayName(setting.secondary_lang) : '\u672A\u8A2D\u5B9A'}\\n\u81EA\u52D5\u7FFB\u8B6F\uFF1A${setting.is_translating ? '\u958B\u555F \u2705' : '\u95DC\u9589 \u274C'}`\r\n                        }];\r\n                    } else {\r\n                        return [{\r\n                            type: 'text',\r\n                            text: '\u2757 \u5C1A\u672A\u8A2D\u5B9A\u7FFB\u8B6F\u8A9E\u8A00\uFF0C\u8ACB\u4F7F\u7528 /\u7FFB\u8B6F \u6216 /\u8A2D\u5B9A \u4F86\u8A2D\u5B9A\u8A9E\u8A00\u3002'\r\n                        }];\r\n                    }\r\n            }\r\n            return [];\r\n        }\r\n\r\n        // \u7372\u53D6\u8A9E\u8A00\u8A2D\u5B9A\r\n        const contextId = event.source.groupId || event.source.userId || event.source.roomId;\r\n        const contextType = event.source.type;\r\n        \r\n        if (!contextId) {\r\n            throw new Error('\u7121\u6CD5\u7372\u53D6\u4E0A\u4E0B\u6587 ID');\r\n        }\r\n\r\n        const setting = await getLanguageSetting(contextId, contextType, env.DB);\r\n        \r\n        if (!setting || !setting.is_translating) {\r\n            return [];\r\n        }\r\n\r\n        // \u4F7F\u7528\u65B0\u7684\u7FFB\u8B6F\u8655\u7406\u5668\r\n        console.log('\u958B\u59CB\u7FFB\u8B6F\u8A0A\u606F:', { text, primaryLang: setting.primary_lang, secondaryLang: setting.secondary_lang });\r\n        const translations = await translateWithSecondary(\r\n            text,\r\n            setting.primary_lang || 'ja',  // \u5982\u679C\u6C92\u6709\u8A2D\u5B9A\uFF0C\u9810\u8A2D\u4F7F\u7528\u65E5\u6587\r\n            setting.secondary_lang || null,\r\n            env\r\n        );\r\n        \r\n        // \u69CB\u5EFA\u56DE\u61C9\u8A0A\u606F\r\n        const messages = [\r\n            {\r\n                type: 'text',\r\n                text: `\uD83C\uDF10 \u539F\u6587\uFF1A\\n${text}`\r\n            }\r\n        ];\r\n\r\n        // \u6839\u64DA\u7FFB\u8B6F\u7D50\u679C\u6DFB\u52A0\u7FFB\u8B6F\r\n        if (translations.length >= 2) {\r\n            messages.push({\r\n                type: 'text',\r\n                text: `\u7FFB\u8B6F (${getLanguageDisplayName(translations[0].lang)})\uFF1A\\n${translations[0].text}`\r\n            });\r\n            messages.push({\r\n                type: 'text',\r\n                text: `\u7FFB\u8B6F (${getLanguageDisplayName(translations[1].lang)})\uFF1A\\n${translations[1].text}`\r\n            });\r\n        }\r\n\r\n        return messages;\r\n    } catch (error) {\r\n        console.error('\u8655\u7406\u8A0A\u606F\u6642\u767C\u751F\u932F\u8AA4:', error);\r\n        return [{\r\n            type: 'text',\r\n            text: `\u7FFB\u8B6F\u767C\u751F\u932F\u8AA4\uFF1A${error.message}`\r\n        }];\r\n    }\r\n}\r\n\r\n// \u7372\u53D6\u8A9E\u8A00\u986F\u793A\u540D\u7A31\r\nfunction getLanguageDisplayName(langCode: string): string {\r\n    const langMap = {\r\n        'en': '\u82F1\u6587',\r\n        'ja': '\u65E5\u6587',\r\n        'ko': '\u97D3\u6587',\r\n        'vi': '\u8D8A\u5357\u6587',\r\n        'th': '\u6CF0\u6587',\r\n        'zh-TW': '\u7E41\u9AD4\u4E2D\u6587',\r\n        'zh-CN': '\u7C21\u9AD4\u4E2D\u6587'\r\n    };\r\n    return langMap[langCode] || langCode;\r\n} ", "import { LinePostbackEvent, Env } from '../types';\r\nimport { updateLanguageSetting } from '../services/languageSettingService';\r\n\r\nexport async function handlePostback(event: LinePostbackEvent, env: Env): Promise<any[]> {\r\n    try {\r\n        const contextId = event.source.groupId || event.source.userId || event.source.roomId;\r\n        const contextType = event.source.type;\r\n        \r\n        if (!contextId) {\r\n            throw new Error('\u7121\u6CD5\u7372\u53D6\u4E0A\u4E0B\u6587 ID');\r\n        }\r\n\r\n        const data = new URLSearchParams(event.postback.data);\r\n        const action = data.get('action');\r\n\r\n        switch (action) {\r\n            case 'set_primary_lang':\r\n                const primaryLang = data.get('lang');\r\n                if (primaryLang) {\r\n                    await updateLanguageSetting({\r\n                        context_id: contextId,\r\n                        context_type: contextType,\r\n                        primary_lang: primaryLang,\r\n                        is_translating: true\r\n                    }, env.DB);\r\n                    return [{\r\n                        type: 'text',\r\n                        text: `\u5DF2\u8A2D\u5B9A\u4E3B\u8981\u7FFB\u8B6F\u8A9E\u8A00\u70BA\uFF1A${getLanguageDisplayName(primaryLang)}`\r\n                    }];\r\n                }\r\n                break;\r\n\r\n            case 'set_secondary_lang':\r\n                const secondaryLang = data.get('lang');\r\n                if (secondaryLang) {\r\n                    await updateLanguageSetting({\r\n                        context_id: contextId,\r\n                        context_type: contextType,\r\n                        primary_lang: 'ja',  // \u9810\u8A2D\u4E3B\u8981\u8A9E\u8A00\u70BA\u65E5\u6587\r\n                        secondary_lang: secondaryLang,\r\n                        is_translating: true\r\n                    }, env.DB);\r\n                    return [{\r\n                        type: 'text',\r\n                        text: `\u5DF2\u8A2D\u5B9A\u6B21\u8981\u7FFB\u8B6F\u8A9E\u8A00\u70BA\uFF1A${getLanguageDisplayName(secondaryLang)}`\r\n                    }];\r\n                }\r\n                break;\r\n\r\n            case 'toggle_translation':\r\n                const isTranslating = data.get('enable') === 'true';\r\n                await updateLanguageSetting({\r\n                    context_id: contextId,\r\n                    context_type: contextType,\r\n                    primary_lang: 'ja',  // \u9810\u8A2D\u4E3B\u8981\u8A9E\u8A00\u70BA\u65E5\u6587\r\n                    is_translating: isTranslating\r\n                }, env.DB);\r\n                return [{\r\n                    type: 'text',\r\n                    text: isTranslating ? '\u5DF2\u958B\u555F\u7FFB\u8B6F\u529F\u80FD' : '\u5DF2\u95DC\u9589\u7FFB\u8B6F\u529F\u80FD'\r\n                }];\r\n        }\r\n\r\n        return [];\r\n    } catch (error) {\r\n        console.error('\u8655\u7406 postback \u6642\u767C\u751F\u932F\u8AA4:', error);\r\n        return [{\r\n            type: 'text',\r\n            text: `\u8A2D\u5B9A\u767C\u751F\u932F\u8AA4\uFF1A${error.message}`\r\n        }];\r\n    }\r\n}\r\n\r\nfunction getLanguageDisplayName(langCode: string): string {\r\n    const langMap = {\r\n        'en': '\u82F1\u6587',\r\n        'ja': '\u65E5\u6587',\r\n        'ko': '\u97D3\u6587',\r\n        'vi': '\u8D8A\u5357\u6587',\r\n        'th': '\u6CF0\u6587',\r\n        'zh-TW': '\u7E41\u9AD4\u4E2D\u6587',\r\n        'zh-CN': '\u7C21\u9AD4\u4E2D\u6587'\r\n    };\r\n    return langMap[langCode] || langCode;\r\n} ", "export async function verifySignature(\r\n    body: string,\r\n    signature: string,\r\n    channelSecret: string\r\n): Promise<boolean> {\r\n    const encoder = new TextEncoder();\r\n    const key = await crypto.subtle.importKey(\r\n        'raw',\r\n        encoder.encode(channelSecret),\r\n        { name: 'HMAC', hash: 'SHA-256' },\r\n        false,\r\n        ['sign']\r\n    );\r\n\r\n    const bodyBuffer = encoder.encode(body);\r\n    const signatureBuffer = await crypto.subtle.sign('HMAC', key, bodyBuffer);\r\n    const calculatedSignature = btoa(String.fromCharCode(...new Uint8Array(signatureBuffer)));\r\n\r\n    return calculatedSignature === signature;\r\n} ", "import { Env } from './types';\r\nimport { handleMessage } from './handlers/messageHandler';\r\nimport { handlePostback } from './handlers/postbackHandler';\r\nimport { verifySignature } from './utils/lineSignature';\r\n\r\nexport default {\r\n    async fetch(request: Request, env: Env): Promise<Response> {\r\n        if (request.method !== 'POST') {\r\n            return new Response('Method not allowed', { status: 405 });\r\n        }\r\n\r\n        try {\r\n            const signature = request.headers.get('x-line-signature');\r\n            if (!signature) {\r\n                return new Response('Signature required', { status: 401 });\r\n            }\r\n\r\n            const body = await request.text();\r\n            console.log('\u6536\u5230\u7684\u8ACB\u6C42\u5167\u5BB9:', body);\r\n\r\n            const isValid = await verifySignature(body, signature, env.LINE_CHANNEL_SECRET);\r\n            console.log('\u8A08\u7B97\u7684\u7C3D\u540D:', isValid);\r\n            console.log('\u6536\u5230\u7684\u7C3D\u540D:', signature);\r\n\r\n            if (!isValid) {\r\n                return new Response('Invalid signature', { status: 401 });\r\n            }\r\n\r\n            const data = JSON.parse(body);\r\n            const events = data.events;\r\n\r\n            if (!events || events.length === 0) {\r\n                return new Response('No events', { status: 200 });\r\n            }\r\n\r\n            const responses = await Promise.all(\r\n                events.map(async (event) => {\r\n                    console.log('\u8655\u7406\u4E8B\u4EF6:', event.type);\r\n\r\n                    let messages;\r\n                    if (event.type === 'message') {\r\n                        messages = await handleMessage(event, env);\r\n                    } else if (event.type === 'postback') {\r\n                        messages = await handlePostback(event, env);\r\n                    }\r\n\r\n                    if (messages && messages.length > 0) {\r\n                        console.log('\u6E96\u5099\u767C\u9001\u7FFB\u8B6F\u7D50\u679C:', messages);\r\n                        await fetch('https://api.line.me/v2/bot/message/reply', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                'Authorization': `Bearer ${env.LINE_CHANNEL_ACCESS_TOKEN}`\r\n                            },\r\n                            body: JSON.stringify({\r\n                                replyToken: event.replyToken,\r\n                                messages: messages\r\n                            })\r\n                        });\r\n                    }\r\n                })\r\n            );\r\n\r\n            return new Response('Ok', { status: 200 });\r\n        } catch (error) {\r\n            console.error('\u8655\u7406\u8ACB\u6C42\u6642\u767C\u751F\u932F\u8AA4:', error);\r\n            return new Response('Internal server error', { status: 500 });\r\n        }\r\n    }\r\n}; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\projects\\\\LINEbot\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\projects\\\\LINEbot\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\projects\\\\LINEbot\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\projects\\\\LINEbot\\\\src\\\\index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\projects\\\\LINEbot\\\\.wrangler\\\\tmp\\\\bundle-h9nEE4\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\projects\\\\LINEbot\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\projects\\\\LINEbot\\\\.wrangler\\\\tmp\\\\bundle-h9nEE4\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\projects\\\\LINEbot\\\\.wrangler\\\\tmp\\\\bundle-h9nEE4\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["contextId", "setting", "getLanguageDisplayName"]
}
